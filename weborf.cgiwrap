#!/usr/bin/python
'''
Weborf
Copyright (C) 2008  Salvo "LtWorf" Tomaselli

Weborf is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

@author Salvo "LtWorf" Tomaselli <tiposchi@tiscali.it>
'''

import sys
import py_compile
import os
import socket
import base64
import csv
import time

def post_escape(val):
    '''Post fields use certains escapes. This function returns the original string'''
    val=val.replace("+"," ") #Replaces all + with a space
    
    i=val.find("%") #% is the char for an exadecimal escape
    while i!=-1: #If there is a % in the non parsed part of the string
        s=val[i+1] + val[i+2] #Extract the exadecimal code
        if s!="37":
            #Replaces all the escapes in the string
            val=val.replace("%"+s,chr(int(s,16)))
        else:
            '''Replaces only once because this char is a % so there would be %
            that aren't escapes in the non parsed part of the string'''
            val=val.replace("%"+s,chr(int(s,16)),1)
            
        i=val.find("%",i+1)
    
    return val
def getVal(dic,key):
    '''Returns the value dic[key] or None if the key doesn't exist'''
    try:
        return dic[key]
    except:
        return ""

#Loading configuration from file or setting default
try:
    execfile("/etc/weborf/cgiwrapper.conf")
except:
    pass


env={}

#Sets SERVER and HEADER variables
_SERVER={}
_HEADER={}
fields = sys.argv[3].split("\r\n")


#os.putenv('SERVER_PROTOCOL',fields.pop(0))
env['SERVER_PROTOCOL']=fields.pop(0)


#os.putenv('SCRIPT_NAME',"test.php")

fields.remove("")
for i in fields:
    v=i.split(": ",1)
    _HEADER[v[0]]=v[1]
    
'''          meta-variable-name =  |  |
                           "CONTENT_TYPE" | "" |
                           "PATH_INFO" | "PATH_TRANSLATED" |
                            |  |
                           "REMOTE_HOST" | "REMOTE_IDENT" |
                           
                           "" |  |
                            |  |
                           | scheme |
                           protocol-var-name | extension-var-name
      protocol-var-name  = ( protocol | scheme ) "_" var-name
      scheme             = alpha *( alpha | digit | "+" | "-" | "." )
      var-name           = token
      extension-var-name = token'''

#---------------------------------------------------------------------------------------TODO SOLVE
#os.putenv('REQUEST_METHOD',sys.argv[4])
#env['REQUEST_METHOD']=sys.argv[4]
#env["SERVER_NAME"]=getVal(_HEADER,'Host')
#env['GATEWAY_INTERFACE']="CGI/1.1"

env['SCRIPT_NAME']=sys.argv[1][len(sys.argv[6]):]
#env['SERVER_SOFTWARE']=os.getenv('SERVER_SOFTWARE')

env["QUERY_STRING"]=sys.argv[2]
env['REMOTE_ADDR']=sys.argv[5]

#Deconding auth field
v=getVal(_HEADER,'Authorization')
if v!="":
    q=v.split(" ")
    os.putenv('AUTH_TYPE',q[0])
    auth=base64.b64decode(q[1]).split(":",1)
    os.putenv('REMOTE_USER',auth[0])
    _SERVER['PHP_AUTH_PW']=auth[1]

_SERVER['SERVER_SIGNATURE']=os.getenv("SERVER_SOFTWARE")

_SERVER["HTTP_REFERER"]=getVal(_HEADER,"Referer")
_SERVER["HTTP_CONNECTION"]=getVal(_HEADER,"Connection")
_SERVER['HTTP_ACCEPT_LANGUAGE']=getVal(_HEADER,"Accept-Language")
_SERVER['HTTP_ACCEPT_ENCODING' ]=getVal(_HEADER,"Accept-Encoding")
_SERVER['HTTP_ACCEPT_CHARSET' ]=getVal(_HEADER,"Accept-Charset")
_SERVER['HTTP_USER_AGENT']=getVal(_HEADER,'User-Agent')
_SERVER['SCRIPT_FILENAME']=sys.argv[1]
_SERVER['SCRIPT_NAME']=sys.argv[1]
_SERVER['HTTP_HOST']=getVal(_HEADER,'Host')
if _SERVER['HTTP_HOST']!=None:
    _SERVER['SERVER_NAME']=_SERVER['HTTP_HOST']
else:
    _SERVER['SERVER_NAME']=socket.gethostname()

_SERVER['HTTPS']=None #Will have to do something better when ssl will be implemented!
_SERVER['REMOTE_HOST']=None
_SERVER['REMOTE_PORT']=None


#Changing dir to script's one
'''
for i in range(len(sys.argv[1])-1,-1,-1):
    if sys.argv[1][i]==os.sep:
        os.chdir(sys.argv[1][0:i])
        break
'''

cmd_line=["-f",sys.argv[1]]

#Sets GET variables
if len(sys.argv[2])!=0:
    for i in sys.argv[2].split("&"):
        cmd_line.append(i)


o_pipe=os.pipe()
i_pipe=os.pipe() #Input for child process

#Sets POST variables
if getVal(_HEADER,"Content-Length")!="":
    #os.putenv('CONTENT_LENGTH',getVal(_HEADER,"Content-Length"))
    env['CONTENT_LENGTH']=getVal(_HEADER,"Content-Length")
    post=sys.stdin.read()
    print "POST SENT",post,env['CONTENT_LENGTH']
    print getVal(_HEADER,'Content-Type')
    env['CONTENT_TYPE']=_HEADER['Content-Type']
    os.write(i_pipe[1],post)
'''f=file(sys.argv[1])
os.write(i_pipe[1],f.read())'''

pid=os.fork()
out=""
if pid==0: #Child process
    stdin=sys.stdin.fileno()
    stdout=sys.stdout.fileno()
    
    os.close(stdin)
    os.close(i_pipe[1])
    os.dup(i_pipe[0])
    
    os.close(stdout)
    os.close(o_pipe[0])
    os.dup(o_pipe[1])
    
    #os.putenv('REDIRECT_STATUS',"200")
    #os.execv("/usr/lib/cgi-bin/php5",cmd_line)
    os.execve("/usr/bin/php5-cgi",cmd_line,env)
    
    #proc=os.popen("/tmp/test")
    print proc.read() 
    
    sys.exit(1)
else: #Parent process
    os.close(i_pipe[0])
    os.close(i_pipe[1])    
    os.close(o_pipe[1])
    
    os.waitpid(pid,0)
    while True:
      o=os.read(o_pipe[0],9000)
      out+=o
      if len(o)<9000:
          break
    os.close(o_pipe[0])

out=out.split("\r\n\r\n")
if len(out)==2:
    print out[1] #Writing page
    os.write(4,out[0]+"\r\n") #Writing headers
    
    #Sending status to weborf
    f=out[0].find("Status")
    if f!=-1:
        
        status=out[0][f+8:f+11]
        print status
        print out[0],f
        #Redirect
        if status=="303" or status=="302":
            sys.exit(33)    
        elif status=="404":
            #sys.exit(44)
            pass
else:
    print out[0]

sys.exit(0)